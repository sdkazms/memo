https://www.ajofficesystem.net/

shida-kazumasa@ajflat.co.jp


・指定したレコードを削除
DELETE FROM テーブル名 WHERE 条件;

・指定したカラムに値をセット
UPDATE テーブル名
SET カラム1 = 値1, カラム2 = 値2, ...
WHERE 条件;

・特定の範囲の行を削除
DELETE FROM テーブル名
WHERE id IN (
    SELECT id FROM (
        SELECT id, ROW_NUMBER() OVER (ORDER BY id) AS row_num
        FROM テーブル名
    ) AS numbered_rows
    WHERE row_num BETWEEN x AND y
);


PostgreSQLのテーブル一覧の取得方法
https://illacloud.com/ja/blog/list-tables-in-postgresql/#dt%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E5%86%85%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%82%92%E4%B8%80%E8%A6%A7%E8%A1%A8%E7%A4%BA

PostgreSQLのCSV出力(Export)方法
https://qiita.com/cyborg__ninja/items/99efcb5b62a4cef2f156

PostgreSQL データベースを一発で丸ごとコピー
https://laox.com/ja/9835

【PostgreSQL】テーブル・DBを閲覧・コピーするときに知っていると便利なテクニック
https://tech-blog.rakus.co.jp/entry/20200818/postgresql

PostgreSQL ループ文のサンプル(LOOP,WHILE)
https://itsakura.com/postgresql-for

【PostgreSQL】SQL（SELECT文）の結果をループする方法
https://postgresweb.com/post-5331

SELECT tablename FROM pg_tables;

CREATE DATABASE newdb TEMPLATE foo;

CREATE TABLE shohincopy_new (LIKE shohincopy INCLUDING ALL);
INSERT INTO shohincopy_new SELECT * FROM shohincopy;

SELECT	*
FROM	shohincopy
EXCEPT
SELECT	*
FROM	shohincopy_new;

SELECT	*
FROM	shohincopy_new
EXCEPT
SELECT	*
FROM	shohincopy;

(
  SELECT 'shohincopy_new' AS _table_name, * FROM shohincopy_new
  EXCEPT ALL SELECT 'shohincopy_new' AS table_name, * FROM shohincopy
) UNION ALL (
  SELECT 'shohincopy' AS _table_name, * FROM shohincopy
  EXCEPT ALL SELECT 'shohincopy' AS table_name, * FROM shohincopy_new
) ORDER BY shohin_id, _table_name

VScodeのPostgreSQL拡張が便利
https://od10z.wordpress.com/2019/12/17/vscode-extensions-for-postgresql/

【Cursor】AI搭載の最強コードエディタ！日本語の使い方や料金体系、できることを解説
https://weel.co.jp/media/innovator/cursor/#index_id2







createdb -T shop shop_copy
psql pg_dump -Ft shop | pg_restore -d shop_copy2

COPY shop TO 'C:\git\sql\test.csv' WITH CSV DELIMITER ',';

COPY shohincopy TO 'C:\git\sql\test3.csv' DELIMITER ',' CSV ENCODING 'SJIS';
copy public.shohincopy (shohin_id, shohin_mei, shohin_bunrui, hanbai_tanka, shiire_tanka, torokubi) TO 'C:/git/sql/test2.csv' DELIMITER ',' CSV ENCODING 'SJIS' QUOTE '\"' ESCAPE '''';



(SELECT 'a' || 'b')
('C:\git\sql\' || table_rec.tablename || '.csv')

CREATE OR REPLACE PROCEDURE loop_test1()
AS $$
DECLARE
    --1.レコード型で変数宣言
    table_rec record; 
BEGIN
    --2.for文（select結果をtable_recに格納してループする）
    FOR table_rec IN
        --select文の最後の;は不要
        select tablename from pg_tables
    LOOP
        --ここにループ中の処理を書く
        --動作確認用：raise infoで変数の中身を表示する
        --raise info '%', table_rec.tablename;
        copy shohincopy TO (CAST(table_rec.tablename AS character varying)) DELIMITER ',' CSV ENCODING 'SJIS';
    END LOOP;
END;
$$
LANGUAGE plpgsql;

CALL loop_test1();

CALL loop_test1();










CREATE OR REPLACE PROCEDURE loop_test1()
AS $$
DECLARE
    --1.レコード型で変数宣言
    table_rec record;
	ch text;
BEGIN
    --2.for文（select結果をtable_recに格納してループする）
    FOR table_rec IN
        --select文の最後の;は不要
        select tablename from pg_tables
    LOOP
        --ここにループ中の処理を書く
        --動作確認用：raise infoで変数の中身を表示する
        --raise info '%', table_rec.tablename;
        copy shohincopy TO (SELECT 'a' || 'b') DELIMITER ',' CSV ENCODING 'SJIS';
    END LOOP;
END;
$$
LANGUAGE plpgsql;

CREATE OR REPLACE PROCEDURE sample_proc(
  v_title VARCHAR,
  v_description TEXT)
AS $$
DECLARE
BEGIN
  copy shohincopy TO v_title DELIMITER ',' CSV ENCODING 'SJIS';
END;
$$
LANGUAGE plpgsql;

select pg_typeof('32767');




・WITH句、OUTER JOINメモ
With Y As(
SELECT
  y,
  MAX(y_name) as y_name
 FROM y_t
  WHERE
   k  = '0001'AND
   t  = '01'  AND
   yd = '2024/06/02'
 GROUP BY y)

SELECT
  m.y,
  Y.y_name,
  m.m,
  m.m_1,
  m.m_2,
  m.m_3,
  m.m_4,
  m.m_5
FROM
  mi as m LEFT OUTER JOIN Y
  ON m.y = Y.y
     -- AND m.k = Y.k AND
     -- m.t = Y.t
WHERE
  k = '0001' AND
  t = '01'   AND
  d = '2024/06/02';

・SELECT INTOメモ
https://runebook.dev/ja/docs/postgresql/sql-selectinto

CREATE TABLE films(
film_id varchar(4) NOT NULL,
title varchar(4) NOT NULL,
date_prod date  NOT NULL,
PRIMARY KEY(film_id));

INSERT INTO films (film_id, title, date_prod) VALUES ('0001', 'f1', '2002-01-01');
INSERT INTO films (film_id, title, date_prod) VALUES ('0002', 'f2', '2001-01-01');
INSERT INTO films (film_id, title, date_prod) VALUES ('0003', 'f3', '2003-01-01');
INSERT INTO films (film_id, title, date_prod) VALUES ('0004', 'f4', '2004-01-01');

SELECT * INTO films_recent FROM films WHERE date_prod >= '2002-01-01';




・DBのリストア方法
プレーンテキスト形式（.sql）のバックアップファイルの場合：
createdb -U username new_database_name
psql -U username -d database_name -f /path/to/your/backup_file.sql

カスタム形式（-Fc）のバックアップファイル（.dump）の場合：
createdb -U username new_database_name
pg_restore -U username -d new_database_name /path/to/your/backup_file.dump

・DBのバックアップ作成方法
プレーンテキスト形式（SQL）でバックアップを作成：
pg_dump -U username database_name > /path/to/your/backup_file.sql

カスタム形式（-Fc）でバックアップを作成：
pg_dump -U username -Fc database_name > /path/to/your/backup_file.dump

--(例)
cd "C:\Program Files (x86)\PostgreSQL\9.2\bin"
dropdb -U postgres database_name
createdb -U postgres database_name
pg_restore -U postgres -d database_name C:/XXXX/XXXX.backup

pg_dump -U postgres -Fc database_name > C:/XXXX/XXXX.backup
pg_dump -U postgres -Fc -h localhost -p 5432 database_name > C:/XXXX/XXXX.dump
--


ローカルのサーバーへのリストア
https://ganges.pro/customer/help/%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%B8%E3%81%AE%E3%83%AA%E3%82%B9%E3%83%88%E3%82%A2/

・『入門向け』PostgreSQLでシンプルなプロシージャを作成する
https://rubytomato.hateblo.jp/entry/2020/07/17/162208

・PostgreSQLでストアドプロシージャを使用する
https://www.fujitsu.com/jp/products/software/resources/feature-stories/postgres/article-index/stored-procedure/

・PostgreSQLで関数を作って、使う[PL/pgSQL入門]
https://qiita.com/SRsawaguchi/items/411801e254ee66f511f1

【PL/pgSQL入門】PL/pgSQLを勉強したのでまとめてみた
https://qiita.com/ebichan_88/items/1effb09fbc458276ea51

[Redshift][PostgreSQL] WITH句を使ってSQLをシンプルに。
https://dev.classmethod.jp/articles/redshift-postgresql-with/

Postgresqlで型を調べたい
https://qiita.com/rhi222/items/6f4156f1e729d31c16a1

PostgreSQL ループ文のサンプル(LOOP,WHILE)
https://itsakura.com/postgresql-for

【PostgreSQL】SQL（SELECT文）の結果をループする方法
https://postgresweb.com/post-5331

SQLのループ制御 LOOP、FOR、WHILEを使ったサンプルコード
https://style.potepan.com/articles/25328.html


CREATE OR REPLACE PROCEDURE loop_test1()
AS $$
DECLARE
    --1.レコード型で変数宣言
    table_rec record;
BEGIN
    --2.for文（select結果をtable_recに格納してループする）
    FOR table_rec IN
        --select文の最後の;は不要
        select * from films_recent
    LOOP
        --ここにループ中の処理を書く
        --動作確認用：raise infoで変数の中身を表示する
        --copy shohincopy TO (SELECT 'a' || 'b') DELIMITER ',' CSV ENCODING 'SJIS';
        raise info '%', table_rec.film_id;
        raise info '%', table_rec.title;
        raise info '%', table_rec.date_prod;
    END LOOP;
END;
$$
LANGUAGE plpgsql;

CALL loop_test1();


CREATE OR REPLACE FUNCTION years_ago(i_arg INTEGER)
RETURNS INTEGER
AS $$
  DECLARE
    current_year INTEGER := extract(year from current_date)::INTEGER;
  BEGIN
    RETURN current_year - i_arg;
  END;
$$
LANGUAGE plpgsql;

SELECT years_ago(10);





int numberOfFrames = 0;
int currentFrame = 0;

private void pictureBox1_Paint(object sender, System.Windows.Forms.PaintEventArgs e)
{
    if (currentFrame == numberOfFrames - 1)
    {
        this.pictureBox1.Enabled = false;
    }
    currentFrame++;
}


this.DoubleBuffered = true;

// https://stackoverflow.com/questions/53634678/how-to-stop-picturebox-gif-animation-after-the-first-loop-c
//pictureBox1.Image = Image.FromFile(@"C:\git\TSK\form_gif\GifControlTest\7Ulf.gif");
pictureBox1.Image = Image.FromFile(@"C:\git\TSK\form_gif\GifControlTest\7Ulf_optimize.gif");
pictureBox1.Paint += new PaintEventHandler(this.pictureBox1_Paint);

FrameDimension dimension = new FrameDimension(this.pictureBox1.Image.FrameDimensionsList[0]);
numberOfFrames = this.pictureBox1.Image.GetFrameCount(dimension);

https://www.perplexity.ai
https://www.create.xyz
https://claude.ai/
https://gemini.google.com

・DesignerSerializationVisibility
https://www.perplexity.ai/search/yi-xia-nokotowoiigan-sinixiu-z-h3HGWsRPSE.Tc6ywf818.w
・XMLからコントロールに画像設定
https://www.perplexity.ai/search/yi-xia-nokotowomotutoiigan-sin-dqxAmF4MRrS7ifHJiQD_jQ
・コントロールを最背面に設定
https://www.perplexity.ai/search/ji-di-kurasunihua-xiang-woshe-EqLpgKhpTF6q6ZaZBPfjyw
・透過フォーム
https://www.perplexity.ai/search/yi-xia-nosanhuruwotou-guo-form-xP6siyL_QySzUq27RQda_g
・Timer
https://www.perplexity.ai/search/c-nowinformstehua-mian-nikonto-3uh_unKORkWPB9gQe32zGA


・差分ビューア
C:\Program Files\WinMerge\WinMergeU.exe -e -ub -dl %bname -dr %yname %base %mine

・マージツール
C:\Program Files\WinMerge\WinMergeU.exe /e /ub /fr /wl /wm /dl %bname /dm %tname /dr %yname  %base %theirs %mine /o %merged /ar

・マージツール設定方法
https://www.perplexity.ai/search/tortoisesvntetortoisemergetena-BEFF6sneQ62UYzp5wXw.rw
・マージ手順
https://www.perplexity.ai/search/tortoisesvntearuhurantiwota-no-UbUgyi6eSaKdppGFHatGfg


https://www.perplexity.ai/search/meinmonitanoihentohantorakaras-zU59KSVGT8OwvOhyUDaKhg

delphi デフォルト引数、out引数
https://www.perplexity.ai/search/delphi3noguan-shu-ding-yi-noyi-c6YwTOCoSiiYnC18f.QbEA

BDE (Borland Database Engine) を使用したデータベースアクセス
https://www.perplexity.ai/search/hointawoshi-uzhu-yao-nayan-yu-bNSxnn5GRqiCKv191sJk5w

var
  XXXX: array[0..30] of Char;
begin
  StrPCopy(XXXX, edt●●.Text);

var
  dateTime2: TDateTime;
begin
  if TryStrToDateTime(edt●●.Text, dateTime2) then
  begin
    // 変換成功時の処理
  end
  else
  begin
    ShowMessage('無効な日付形式です。');
    // エラー処理
  end;

https://www.perplexity.ai/search/echo-off-chcp-932-nul-guan-li-F44eLbHFR7WnF5i5f.v97Q

・VMショートカット送信
https://www.perplexity.ai/search/virtual-boxnowindosxptesiyotok-9qcqyGktTOqdPfLvKChxUw


https://www.perplexity.ai/search/1-qian-ri-karadang-ri-henoreto-x42U7eUWQvGajs4pZWVQBA

