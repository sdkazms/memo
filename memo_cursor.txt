Cursorのコメントショートカット
https://www.perplexity.ai/search/cursortesosukotowotong-chang-n-1ELM7gjGSQOlxGRSYoSqjQ
・行コメント: Ctrl + /
・ブロックコメント: Shift + Alt + A

@シンボル
https://www.perplexity.ai/search/cursornotiyatutoha-woshi-tutet-y8Fh4AX.SZSFudGH6GikLw

cursor完全ガイドの修正点
https://github.com/kinopeee/cursor-perfect-guide

Ctrl + Enter
⇒変更を受け入れ

Ctrl + Delete
⇒変更を拒否

Ctrl + L
⇒現在のファイルのAIペインを新規作成

行選択してCtrl + K
⇒対象内のコードに編集、新規追加したりする

「問題」タブ -> エラー表示部を右クリック -> 「Fix with AI」
⇒AIアシスタントによるエラーの自動修正

netstat -ano | findstr :<PORT>
taskkill /PID <PID> /F

netstat -ano | findstr :3000
taskkill /PID 14112 /F


Command Kの起動方法
・Ctrl + L
・コードの一部を選択し、表示されるツールチップの「Edit」ボタン

Command Kによる部分編集は1行～50行程度の選択範囲で最も効果的に機能
Command Kは何も指定していない状態でも現在のファイル全体を参照している
quick questionで変更プランを確認し、実行してと指示してそのプランに沿った編集を実施する方法もある
選択範囲が50行を超える場合はAIペインのチャットに送信することを推奨

codebase参照はプロジェクト内でどのファイルを変更すべきか、どこを変更するとどの範囲に影響が生じるかといった場面にとどめるのがよい。
※大量の情報の参照は、一番伝えたい情報に対してノイズとなり、回答精度や処理速度が低下するため

codebase参照で必要な情報を取得したら、参照する範囲を狭め、高性能モデルを使ったコード生成を行うのがおすすめ

「回答は修正コードのみ」の指示をすると、変更部分だけのコードが回答されるようになる。
　Applyによる変更は同じなので、回答範囲を限定することで効率が上がる
　コード全体の回答に戻したいときは「完全な出力」とプロンプトに指示

.cursorignoreについて
https://www.perplexity.ai/search/yi-xia-nohui-da-womouyi-du-ti-WZrYnAATT0GHwaI7jEebbA


・VSCodeの便利なショートカット
Ctrl + P
⇒ファイル検索パレットを開く
　※プロジェクト内のファイルをすばやく開くことができる

Ctrl + Shift + F
⇒プロジェクト全体の検索パネルを開く

Ctrl + /
⇒選択中の行をコメント／アンコメントする

Alt + ↑／↓
⇒選択中の行を上下に移動する
　※コードの行を素早く並べ替えたい場合に役立つ

Ctrl + D
⇒次の同じ単語を選択する
　※複数の同じ単語を同時に編集できる
　　変数名の一括変更などに活用

Ctrl + J
⇒ターミナルパネルの表示／非表示切替

Ctrl + Shift + P
⇒エディタのコマンドパレットを開く
　※エディタ内の各種機能を呼び出せる

