PostgreSQLのテーブル一覧の取得方法
https://illacloud.com/ja/blog/list-tables-in-postgresql/#dt%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%83%87%E3%83%BC%E3%82%BF%E3%83%99%E3%83%BC%E3%82%B9%E5%86%85%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%82%92%E4%B8%80%E8%A6%A7%E8%A1%A8%E7%A4%BA

PostgreSQLのCSV出力(Export)方法
https://qiita.com/cyborg__ninja/items/99efcb5b62a4cef2f156

PostgreSQL データベースを一発で丸ごとコピー
https://laox.com/ja/9835

【PostgreSQL】テーブル・DBを閲覧・コピーするときに知っていると便利なテクニック
https://tech-blog.rakus.co.jp/entry/20200818/postgresql

PostgreSQL ループ文のサンプル(LOOP,WHILE)
https://itsakura.com/postgresql-for

【PostgreSQL】SQL（SELECT文）の結果をループする方法
https://postgresweb.com/post-5331

SELECT tablename FROM pg_tables;

CREATE DATABASE newdb TEMPLATE foo;

CREATE TABLE shohincopy_new (LIKE shohincopy INCLUDING ALL);
INSERT INTO shohincopy_new SELECT * FROM shohincopy;

SELECT	*
FROM	shohincopy
EXCEPT
SELECT	*
FROM	shohincopy_new;

SELECT	*
FROM	shohincopy_new
EXCEPT
SELECT	*
FROM	shohincopy;

(
  SELECT 'shohincopy_new' AS _table_name, * FROM shohincopy_new
  EXCEPT ALL SELECT 'shohincopy_new' AS table_name, * FROM shohincopy
) UNION ALL (
  SELECT 'shohincopy' AS _table_name, * FROM shohincopy
  EXCEPT ALL SELECT 'shohincopy' AS table_name, * FROM shohincopy_new
) ORDER BY shohin_id, _table_name








createdb -T shop shop_copy
psql pg_dump -Ft shop | pg_restore -d shop_copy2

COPY shop TO 'C:\git\sql\test.csv' WITH CSV DELIMITER ',';

COPY shohincopy TO 'C:\git\sql\test3.csv' DELIMITER ',' CSV ENCODING 'SJIS';
copy public.shohincopy (shohin_id, shohin_mei, shohin_bunrui, hanbai_tanka, shiire_tanka, torokubi) TO 'C:/git/sql/test2.csv' DELIMITER ',' CSV ENCODING 'SJIS' QUOTE '\"' ESCAPE '''';



(SELECT 'a' || 'b')
('C:\git\sql\' || table_rec.tablename || '.csv')

CREATE OR REPLACE PROCEDURE loop_test1()
AS $$
DECLARE
    --1.レコード型で変数宣言
    table_rec record; 
BEGIN
    --2.for文（select結果をtable_recに格納してループする）
    FOR table_rec IN
        --select文の最後の;は不要
        select tablename from pg_tables
    LOOP
        --ここにループ中の処理を書く
        --動作確認用：raise infoで変数の中身を表示する
        --raise info '%', table_rec.tablename;
        copy shohincopy TO (CAST(table_rec.tablename AS character varying)) DELIMITER ',' CSV ENCODING 'SJIS';
    END LOOP;
END;
$$
LANGUAGE plpgsql;

CALL loop_test1();

CALL loop_test1();










CREATE OR REPLACE PROCEDURE loop_test1()
AS $$
DECLARE
    --1.レコード型で変数宣言
    table_rec record;
	ch text;
BEGIN
    --2.for文（select結果をtable_recに格納してループする）
    FOR table_rec IN
        --select文の最後の;は不要
        select tablename from pg_tables
    LOOP
        --ここにループ中の処理を書く
        --動作確認用：raise infoで変数の中身を表示する
        --raise info '%', table_rec.tablename;
        copy shohincopy TO (SELECT 'a' || 'b') DELIMITER ',' CSV ENCODING 'SJIS';
    END LOOP;
END;
$$
LANGUAGE plpgsql;

CREATE OR REPLACE PROCEDURE sample_proc(
  v_title VARCHAR,
  v_description TEXT)
AS $$
DECLARE
BEGIN
  copy shohincopy TO v_title DELIMITER ',' CSV ENCODING 'SJIS';
END;
$$
LANGUAGE plpgsql;

select pg_typeof('32767');




・WITH句、OUTER JOINメモ
With Y As(
SELECT
  y,
  MAX(y_name) as y_name
 FROM y_t
  WHERE
   k  = '0001'AND
   t  = '01'  AND
   yd = '2024/06/02'
 GROUP BY y)

SELECT
  m.y,
  Y.y_name,
  m.m,
  m.m_1,
  m.m_2,
  m.m_3,
  m.m_4,
  m.m_5
FROM
  mi as m LEFT OUTER JOIN Y
  ON m.y = Y.y
     -- AND m.k = Y.k AND
     -- m.t = Y.t
WHERE
  k = '0001' AND
  t = '01'   AND
  d = '2024/06/02';

・SELECT INTOメモ
https://runebook.dev/ja/docs/postgresql/sql-selectinto

CREATE TABLE films(
film_id varchar(4) NOT NULL,
title varchar(4) NOT NULL,
date_prod date  NOT NULL,
PRIMARY KEY(film_id));

INSERT INTO films (film_id, title, date_prod) VALUES ('0001', 'f1', '2002-01-01');
INSERT INTO films (film_id, title, date_prod) VALUES ('0002', 'f2', '2001-01-01');
INSERT INTO films (film_id, title, date_prod) VALUES ('0003', 'f3', '2003-01-01');
INSERT INTO films (film_id, title, date_prod) VALUES ('0004', 'f4', '2004-01-01');

SELECT * INTO films_recent FROM films WHERE date_prod >= '2002-01-01';


CREATE OR REPLACE PROCEDURE loop_test1()
AS $$
DECLARE
    --1.レコード型で変数宣言
    table_rec record;
BEGIN
    --2.for文（select結果をtable_recに格納してループする）
    FOR table_rec IN
        --select文の最後の;は不要
        select * from films_recent
    LOOP
        --ここにループ中の処理を書く
        --動作確認用：raise infoで変数の中身を表示する
        --copy shohincopy TO (SELECT 'a' || 'b') DELIMITER ',' CSV ENCODING 'SJIS';
        raise info '%', table_rec.film_id;
        raise info '%', table_rec.title;
        raise info '%', table_rec.date_prod;
    END LOOP;
END;
$$
LANGUAGE plpgsql;

CALL loop_test1();
